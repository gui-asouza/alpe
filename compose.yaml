services:
#  alpe:
#    container_name: alpe_app
#    build:
#      context: ../alpe
#      dockerfile: Dockerfile
#    image: alpe:latest
#    ports:
#      - "8085:8085"
#    networks:
#      - alpe_network
  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    restart: on-failure
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: 127.0.0.1:2181
      KAFKA_NUM_PARTITIONS: 3
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    networks:
      - alpe_network
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    ports:
      - 2181:2181
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - alpe_network
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - zookeeper
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: alpe
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 127.0.0.1:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: 127.0.0.1:2181
    networks:
      - alpe_network
networks:
  alpe_network:
    driver: bridge